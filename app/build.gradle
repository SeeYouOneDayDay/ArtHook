plugins {
    id 'com.android.application'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "me.larma.arthookui"
        minSdk 16
        targetSdk 32
        versionCode 1
        versionName "1.0"
//        ndk {
//            moduleName "arthook_native"
//            ldLibs "log"
//            stl "gnustl_static"
//            cFlags "-DANDROID_NDK -std=c99"
//        }
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }
        externalNativeBuild {
            cmake {
//                cppFlags "-std=c++11"
                cFlags "-DANDROID_NDK -std=c99"
                // arguments "-DANDROID_TOOLCHAIN=gcc"
//                arguments "-Wwritable-strings -Wformat"
            }
        }
    }
    externalNativeBuild {
        cmake {
            path 'src/main/cpp/CMakeLists.txt'
        }
    }
//    externalNativeBuild {
//        ndkBuild {
//            path "main/jni/Android.mk"
//        }
//    }
//    sourceSets.main.jni.srcDirs = ['src/main/jni']

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dexOptions {
        preDexLibraries false
        maxProcessCount 8
        javaMaxHeapSize "4g"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    aaptOptions {
        cruncherEnabled = false
        useNewCruncher = false
    }
    testOptions {
        unitTests.returnDefaultValues = true
        resultsDir = "${project.buildDir}/ut_results"
    }
    lintOptions {
        checkReleaseBuilds true
        quiet true
        abortOnError false
        ignoreWarnings true
        textOutput "stdout"
        textReport false
//        disable "UnusedResources", 'RestrictedApi',
//        'TypographyFractions','TypographyQuotes'

        // turn off checking the given issue id's
        disable 'TypographyFractions', 'TypographyQuotes'
        // turn on the given issue id's
        enable 'RtlHardcoded', 'RtlCompat', 'RtlEnabled'
        // check *only* the given issue id's
        check 'NewApi', 'InlinedApi'

    }
}

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
    options.encoding = "UTF-8"
}

dependencies {
}